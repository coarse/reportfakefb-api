{"version":3,"sources":["styling.js","components/DataTable.js","routes/Home.js","components/Cards.js","serverApi.js","routes/Account.js","components/FabAddReport.js","components/Copyright.js","components/ReportForm/SectionTitle.js","components/ReportForm/RealUsernameField.js","components/ReportForm/Buttons.js","components/ReportForm/FakeUsernameField.js","components/ReportForm/index.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","fab","position","bottom","spacing","right","zIndex","modal","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","overflowY","breadcrumbs","grid","moment","require","useStyles1","flexShrink","marginLeft","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onChangePage","className","IconButton","onClick","event","disabled","aria-label","direction","Math","ceil","max","useStyles2","table","minWidth","button","margin","useToolbarStyles","paddingLeft","flex","TableToolbar","Toolbar","Typography","variant","id","component","CustomPaginationActionsTable","accounts","loading","handleFetch","fetchError","React","useState","setPage","setRowsPerPage","rows","emptyRows","min","length","useEffect","Table","TableHead","TableRow","TableCell","align","TableBody","colSpan","slice","map","row","key","scope","Link","RouterLink","color","to","username","style","width","Button","size","href","target","created_at","tz","format","TableFooter","TablePagination","rowsPerPageOptions","label","value","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","Home","Grid","item","xs","Paper","card","marginBottom","fontWeight","lastItem","DataCard","account","Chip","ListItemLink","primary","CustomLink","useMemo","forwardRef","linkProps","ref","ListItem","ListItemText","ListItemSecondaryAction","SimilarCard","List","Divider","similar","data","Error404Card","header","BASE_URL","reports","list","add","report","Account","uuid","useParams","location","useLocation","setLoading","undefined","setAccount","error","setError","fetch","api","then","res","status","Promise","resolve","json","reject","console","catch","catchError","Breadcrumbs","sm","extendedIcon","FabAddReport","open","handleClick","Fab","SectionTitle","text","RealUsernameField","handleChange","FormControl","InputLabel","htmlFor","shrink","Input","onChange","FormHelperText","send","entry","AddEntryButton","DeleteEntryButton","SendButton","field","FakeUsernameField","index","sending","handleDelete","form","top","left","transform","backgroundColor","palette","background","outline","borderRadius","boxShadow","shadows","red","ReportForm","fakes","real","reportError","handleChangeReal","handleAdd","handleChangeFake","handleSend","noValidate","autoComplete","message","Dashboard","history","useHistory","setOpen","setReal","setFakes","setSending","setReportError","fakeAccounts","setFakeAccounts","setFetchError","handleCloseModal","clearData","body","newFakes","splice","method","headers","JSON","stringify","push","CssBaseline","AppBar","clsx","noWrap","Container","maxWidth","path","exact","Box","pt","Copyright","Modal","onClose","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gTAiEeA,EA/DGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,QAEbC,IAAK,CACDC,SAAU,WACVC,OAAQL,EAAMM,QAAQ,GACtBC,MAAOP,EAAMM,QAAQ,GACrBE,OAAQR,EAAMQ,OAAOC,MAAQ,GAEjCC,QAAS,CACLC,aAAc,IAElBC,YAAY,aACRV,QAAS,OACTW,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACNf,EAAMgB,OAAON,SAEpBO,OAAQ,CACJT,OAAQR,EAAMQ,OAAOU,OAAS,EAC9BC,WAAYnB,EAAMoB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQtB,EAAMoB,YAAYE,OAAOC,MACjCC,SAAUxB,EAAMoB,YAAYI,SAASC,iBAG7CC,WAAY,CACRC,YAAa,IAEjBC,iBAAkB,CACd1B,QAAS,QAEb2B,MAAO,CACHC,SAAU,GAEdC,aAAc/B,EAAMgB,OAAON,QAC3BsB,QAAS,CACLF,SAAU,EACVG,OAAQ,QACRC,SAAU,QAEdC,UAAW,CACPC,WAAYpC,EAAMM,QAAQ,GAC1B+B,cAAerC,EAAMM,QAAQ,IAEjCgC,MAAO,CACHvB,QAASf,EAAMM,QAAQ,GACvBJ,QAAS,OACTgC,SAAU,OACVK,cAAe,UAEnB9B,MAAO,CACH+B,UAAW,UAEfC,YAAa,CACT1B,QAASf,EAAMM,QAAQ,EAAG,EAAG,EAAG,IAEpCoC,KAAM,CACFZ,SAAU,O,uLCxCZa,EAASC,EAAQ,KAEjBC,EAAa9C,aAAW,SAACC,GAAD,MAAY,CACtCC,KAAM,CACF6C,WAAY,EACZC,WAAY/C,EAAMM,QAAQ,UAIlC,SAAS0C,EAAuBC,GAC5B,IAAMC,EAAUL,IACV7C,EAAQmD,cACNC,EAA2CH,EAA3CG,MAAOC,EAAoCJ,EAApCI,KAAMC,EAA8BL,EAA9BK,YAAaC,EAAiBN,EAAjBM,aAkBlC,OACI,yBAAKC,UAAWN,EAAQjD,MACxB,kBAACwD,EAAA,EAAD,CACIC,QAnB2B,SAACC,GAChCJ,EAAaI,EAAO,IAmBhBC,SAAmB,IAATP,EACVQ,aAAW,cAEU,QAApB7D,EAAM8D,UAAsB,kBAAC,IAAD,MAAmB,kBAAC,IAAD,OAEpD,kBAACL,EAAA,EAAD,CAAYC,QArBc,SAACC,GAC3BJ,EAAaI,EAAON,EAAO,IAoBiBO,SAAmB,IAATP,EAAYQ,aAAW,iBACpD,QAApB7D,EAAM8D,UAAsB,kBAAC,IAAD,MAAyB,kBAAC,IAAD,OAE1D,kBAACL,EAAA,EAAD,CACIC,QArBsB,SAACC,GAC3BJ,EAAaI,EAAON,EAAO,IAqBvBO,SAAUP,GAAQU,KAAKC,KAAKZ,EAAQE,GAAe,EACnDO,aAAW,aAEU,QAApB7D,EAAM8D,UAAsB,kBAAC,IAAD,MAAwB,kBAAC,IAAD,OAEzD,kBAACL,EAAA,EAAD,CACIC,QAxB0B,SAACC,GAC/BJ,EAAaI,EAAOI,KAAKE,IAAI,EAAGF,KAAKC,KAAKZ,EAAQE,GAAe,KAwB7DM,SAAUP,GAAQU,KAAKC,KAAKZ,EAAQE,GAAe,EACnDO,aAAW,aAEU,QAApB7D,EAAM8D,UAAsB,kBAAC,IAAD,MAAoB,kBAAC,IAAD,QAa7D,IAAMI,EAAanE,aAAW,SAACC,GAAD,MAAY,CACtCmE,MAAO,CACHC,SAAU,KAEdC,OAAQ,CACJC,OAAQtE,EAAMM,QAAQ,GAAK,EAAG,GAAK,QAIrCiE,EAAmBxE,aAAW,SAACC,GAAD,MAAY,CAC5CC,KAAM,CACFuE,YAAaxE,EAAMM,QAAQ,GAC3BK,aAAcX,EAAMM,QAAQ,IAEhCuB,MAAO,CACH4C,KAAM,gBAIRC,EAAe,WACjB,IAAMxB,EAAUqB,IAEhB,OACI,kBAACI,EAAA,EAAD,CAASnB,UAAWN,EAAQjD,MACxB,kBAAC2E,EAAA,EAAD,CAAYpB,UAAWN,EAAQrB,MAAOgD,QAAQ,KAAKC,GAAG,aAAaC,UAAU,OAA7E,4BAOG,SAASC,EAAT,GAAqF,IAA9CC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,QAAqBC,GAAc,EAA1BC,WAA0B,EAAdD,aAC3EjC,EAAUgB,IAD+E,EAEvEmB,IAAMC,SAAS,GAFwD,mBAExFjC,EAFwF,KAElFkC,EAFkF,OAGzDF,IAAMC,SAAS,GAH0C,mBAGxFhC,EAHwF,KAG3EkC,EAH2E,KAKzFC,EAAOR,EAEPS,EAAYpC,EAAcS,KAAK4B,IAAIrC,GAAcmC,EAAKG,OAAS,EAAI,EAAIH,EAAKG,QAAUvC,EAAOC,GAcnG,OAFA+B,IAAMQ,UAAUV,EAAa,IAGzB,oCACI,kBAAC,EAAD,MACA,kBAACW,EAAA,EAAD,CAAOtC,UAAWN,EAAQiB,MAAON,aAAW,2BACxC,kBAACkC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,oBACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,UACjB,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,mBAGR,kBAACC,EAAA,EAAD,MAEUV,GAAQA,EAAKG,QAAU,EAEjB,oCACI,kBAACI,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWG,QAAS,EAAGF,MAAM,UACtBhB,EAAW,aAAe,qBAGrC,kBAACc,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,QAIC1C,EAAc,EACTmC,EAAKY,MAAMhD,EAAOC,EAAaD,EAAOC,EAAcA,GACpDmC,GACJa,KAAI,SAACC,GAAD,OACF,kBAACP,EAAA,EAAD,CAAUQ,IAAKD,EAAIzB,IACf,kBAACmB,EAAA,EAAD,CAAWlB,UAAU,KAAK0B,MAAM,OAC5B,kBAACC,EAAA,EAAD,CACI3B,UAAW4B,IACXC,MAAM,UACNC,GAAE,WAAMN,EAAIzB,KACVyB,EAAIO,WAGd,kBAACb,EAAA,EAAD,CAAWc,MAAO,CAAEC,MAAO,KAAOd,MAAM,SACpC,kBAACe,EAAA,EAAD,CACIzD,UAAWN,EAAQmB,OACnBU,UAAW4B,IACX9B,QAAQ,YACR+B,MAAM,YACNM,KAAK,QACLL,GAAE,WAAMN,EAAIzB,KANhB,gBASA,kBAACmC,EAAA,EAAD,CACIzD,UAAWN,EAAQmB,OACnBQ,QAAQ,YACR+B,MAAM,UACNM,KAAK,QACLC,KAAI,+BAA0BZ,EAAIO,UAClCM,OAAO,UANX,aAWJ,kBAACnB,EAAA,EAAD,CAAWc,MAAO,CAAEC,MAAO,KAAOd,MAAM,SAClCvD,EAAO4D,EAAIc,YAAYC,GAAG,kBAAkBC,OAAO,yBAQhF7B,EAAY,GACT,kBAACM,EAAA,EAAD,CAAUe,MAAO,CAAE9E,OAAQ,GAAKyD,IAChC,kBAACO,EAAA,EAAD,CAAWG,QAAS,MAI5B,kBAACoB,EAAA,EAAD,KACI,kBAACxB,EAAA,EAAD,KACI,kBAACyB,EAAA,EAAD,CACAC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEC,MAAO,MAAOC,OAAQ,IACxDxB,QAAS,EACThD,MAAOqC,EAAKG,OACZtC,YAAaA,EACbD,KAAMA,EACNwE,YAAa,CACTC,WAAY,CAAE,aAAc,iBAC5BC,QAAQ,GAEZxE,aApGK,SAACI,EAAOqE,GAC7BzC,EAAQyC,IAoGQC,oBAjGY,SAACtE,GAC7B6B,EAAe0C,SAASvE,EAAMyD,OAAOQ,MAAO,KAC5CrC,EAAQ,IAgGQ4C,iBAAkBnF,QChO3B,SAASoF,EAAT,GAA6D,IAA9CnD,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,QAASE,EAA0B,EAA1BA,WAAYD,EAAc,EAAdA,YACnDjC,EAAUpD,IAEhB,OACI,kBAACuI,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACC,EAAA,EAAD,CAAOhF,UAAWN,EAAQZ,OACtB,kBAAC,EAAD,CACI2C,SAAUA,EACVC,QAASA,EACTE,WAAYA,EACZD,YAAaA,M,uECH3BrF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyI,KAAM,CACF1H,QAASf,EAAMM,QAAQ,GACvB,QAAS,CACLoI,aAAc1I,EAAMM,QAAQ,IAEhC,iBAAkB,CACdqI,WAAY,KAEhB,SAAU,CACND,aAAc1I,EAAMM,QAAQ,IAEhC,SAAU,CACNoI,aAAc1I,EAAMM,QAAQ,KAGpCsI,SAAU,CACNF,aAAc,OAITG,GAAW,SAAC,GAAwB,IAAvB3D,EAAsB,EAAtBA,QAAS4D,EAAa,EAAbA,QACzB5F,EAAUpD,KAEhB,OACI,kBAAC0I,EAAA,EAAD,CAAOhF,UAAWN,EAAQuF,MACnBvD,IAAY4D,EAAW,aACrBA,EAAQhC,SACL,oCACI,kBAAClC,EAAA,EAAD,CAAYC,QAAQ,MAApB,YAAmCiE,EAAQhC,UAC3C,kBAACiC,EAAA,EAAD,CAAMpB,MAAM,OAAOf,MAAM,YAAYM,KAAK,UAC1C,kBAACtC,EAAA,EAAD,CAAYC,QAAQ,SAApB,uEACA,kBAACoC,EAAA,EAAD,CACIzD,UAAWN,EAAQ0F,SACnB/D,QAAQ,WACR+B,MAAM,UACNM,KAAK,QACLC,KAAI,+BAA0B2B,EAAQhC,UACtCM,OAAO,UANX,qBAYJ,oCACI,kBAACxC,EAAA,EAAD,CAAYC,QAAQ,MAApB,oBACA,kBAACkE,EAAA,EAAD,CAAMpB,MAAM,OAAOf,MAAM,UAAUM,KAAK,UACxC,kBAACtC,EAAA,EAAD,CAAYC,QAAQ,SAApB,0JAIA,kBAACD,EAAA,EAAD,CAAYpB,UAAWN,EAAQ0F,SAAU/D,QAAQ,SAAjD,uIAWlBmE,GAAe,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,QAASpC,EAAQ,EAARA,GACtBqC,EAAa7D,IAAM8D,SACrB,kBACI9D,IAAM+D,YAAW,SAACC,EAAWC,GAAZ,OACb,kBAAC,IAAD,eAAYA,IAAKA,EAAKzC,GAAIA,GAAQwC,SAE1C,CAACxC,IAGL,OACI,4BACI,kBAAC0C,GAAA,EAAD,CAAUlF,QAAM,EAACU,UAAWmE,GACxB,kBAACM,GAAA,EAAD,CAAcP,QAASA,IACvB,kBAACQ,GAAA,EAAD,KACI,kBAACxC,EAAA,EAAD,CACIpC,QAAQ,WACR+B,MAAM,UACNM,KAAK,QACLC,KAAI,+BAA0B8B,GAC9B7B,OAAO,UALX,wBAcPsC,GAAc,SAAC,GAAwB,IAAvBxE,EAAsB,EAAtBA,QAAS4D,EAAa,EAAbA,QAC5B5F,EAAUpD,KAEhB,OACI,kBAAC0I,EAAA,EAAD,CAAOhF,UAAWN,EAAQuF,MACnBvD,IAAY4D,EAAW,aACtB,oCACI,kBAAClE,EAAA,EAAD,CAAYC,QAAQ,MAAQiE,EAAQhC,SAAY,UAAY,UAA5D,kBACA,kBAAC6C,EAAA,EAAD,CAAMnG,UAAWN,EAAQ0F,UACrB,kBAACgB,GAAA,EAAD,CAAS7E,UAAU,OAEf+D,EAAQe,QAAQjE,OAAS,EACrB,oCACI,kBAAC2D,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAcP,QAAU,OAAUH,EAAQhC,SAAY,UAAY,WAAa,eAEnF,kBAAC8C,GAAA,EAAD,CAAS7E,UAAU,QAEvB+D,EAAQe,QAAQvD,KAAI,SAACwD,GAAD,OACpB,oCACI,kBAAC,GAAD,CAAcb,QAASa,EAAKhD,SAAUD,GAAE,WAAMiD,EAAKhF,MACnD,kBAAC8E,GAAA,EAAD,CAAS7E,UAAU,eAW1CgF,GAAe,WACxB,IAAM7G,EAAUpD,KAEhB,OACI,kBAAC0I,EAAA,EAAD,CAAOhF,UAAWN,EAAQuF,MACtB,kBAAC7D,EAAA,EAAD,CAAYpB,UAAWN,EAAQ8G,OAAQnF,QAAQ,KAAKqB,MAAM,UAA1D,2BACA,kBAACtB,EAAA,EAAD,CAAYC,QAAQ,QAAQqB,MAAM,UAAlC,yEC9IR+D,GAAQ,uCAMG,QACXC,QAAS,CACLC,KAAK,GAAD,OAAKF,GAAL,YACJG,IAAI,GAAD,OAAKH,GAAL,aAEPI,OAAQ,SAACvF,GAAD,gBAAWmF,GAAX,oBAA+BnF,KCA5B,SAASwF,KACpB,IAAMpH,EAAUpD,IACRyK,EAASC,cAATD,KACFE,EAAWC,cAHa,EAKArF,IAAMC,UAAS,GALf,mBAKvBJ,EALuB,KAKdyF,EALc,OAMAtF,IAAMC,cAASsF,GANf,mBAMvB9B,EANuB,KAMd+B,EANc,OAOJxF,IAAMC,cAASsF,GAPX,mBAOvBE,EAPuB,KAOhBC,EAPgB,KAoC9B,OAFA1F,IAAMQ,WAzBiB,WACnB8E,GAAW,GACXK,MAAMC,GAAIZ,OAAOE,IACZW,MAAK,SAACC,GACH,OAAmB,MAAfA,EAAIC,OACGC,QAAQC,QAAQH,EAAII,QAGxBF,QAAQC,QAAQH,EAAII,QAAQL,MAAK,SAACpB,GACrC,OAAOuB,QAAQG,OAAO1B,SAG7BoB,MAAK,SAACpB,GACHe,EAAWf,GACXa,GAAW,MACZ,SAACG,GACAW,QAAQX,MAAM,UAAWA,GACzBC,EAASD,GACTH,GAAW,MAEde,OAAM,SAACC,GACJF,QAAQX,MAAM,WAAYa,QAIN,CAAClB,IAG7B,kBAACpC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACqD,EAAA,EAAD,CAAapI,UAAWN,EAAQT,aAC5B,kBAACiE,EAAA,EAAD,CAAME,MAAM,UAAU7B,UAAW4B,IAAYE,GAAG,KAAhD,QAGA,kBAACH,EAAA,EAAD,CAAME,MAAM,cAAc7B,UAAW4B,IAAYE,GAAE,WAAM0D,IAEhDrF,EAAW,UACP4F,EAAS,QACJhC,EACGA,EAAQhC,SAAYgC,EAAQhC,SAAW,mBAD/B,YAQjC,kBAACuB,EAAA,EAAD,CAAM7E,UAAWN,EAAQR,KAAMP,WAAS,EAAC7B,QAAS,GAExC4E,IAAY4D,GAAYA,EACtB,oCACI,kBAACT,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIsD,GAAI,GACnB,kBAAC,GAAD,CAAU3G,QAASA,EAAS4D,QAASA,KAEzC,kBAACT,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIsD,GAAI,GACnB,kBAAC,GAAD,CAAa3G,QAASA,EAAS4D,QAASA,MAIhD,kBAACT,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC,GAAD,S,sDCvEtBzI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCG,IAAK,CACDC,SAAU,WACVC,OAAQL,EAAMM,QAAQ,GACtBC,MAAOP,EAAMM,QAAQ,GACrBE,OAAQR,EAAMQ,OAAOC,MAAQ,GAEjCqL,aAAc,CACVnK,YAAa3B,EAAMM,QAAQ,QAuBpByL,GAnBM,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YACnB/I,EAAUpD,KAEhB,OACI,kBAACoM,GAAA,EAAD,CACI1I,UAAWN,EAAQ/C,IACnB0E,QAASmH,EAAO,QAAU,WAC1BpF,MAAOoF,EAAO,UAAY,YAC1BtI,QAASuI,GACPD,EAAQ,kBAAC,KAAD,MACN,oCACI,kBAAC,KAAD,CAASxI,UAAWN,EAAQ4I,eADhC,gBCxBD,qBACX,kBAAClH,EAAA,EAAD,CAAYC,QAAQ,QAAQ+B,MAAM,gBAAgBV,MAAM,UACnD,WACD,kBAACQ,EAAA,EAAD,CAAME,MAAM,UAAUO,KAAK,4BAA3B,qBAGC,IACD,8CACC,iBACD,kBAACT,EAAA,EAAD,CAAME,MAAM,UAAUO,KAAK,8CAA3B,UAGC,MACD,kBAACT,EAAA,EAAD,CAAME,MAAM,UAAUO,KAAK,8CAA3B,aCbFrH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFqE,OAAQtE,EAAMM,QAAQ,EAAG,EAAG,EAAG,QAgBxB6L,GAZM,SAAC,GAAwB,EAAtB3I,UAAuB,IAAZ4I,EAAW,EAAXA,KACzBlJ,EAAUpD,KAEhB,OACI,kBAAC8E,EAAA,EAAD,CACIC,QAAQ,YACRrB,UAAWN,EAAQjD,MACjBmM,I,wCCVRtM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFqE,OAAQtE,EAAMM,QAAQ,EAAG,EAAG,EAAG,QAkBxB+L,GAdW,SAAC,GAA2B,IAA1BzE,EAAyB,EAAzBA,MAAO0E,EAAkB,EAAlBA,aACzBpJ,EAAUpD,KAEhB,OACI,kBAACyM,GAAA,EAAD,CAAa/I,UAAWN,EAAQjD,MAC5B,kBAACuM,GAAA,EAAD,CAAYC,QAAQ,gBAAgBC,QAAQ,GAA5C,oCACA,kBAACC,GAAA,EAAD,CAAO7H,GAAG,gBAAgB8C,MAAOA,EAAOgF,SAAUN,IAClD,kBAACO,GAAA,EAAD,6DChBN/M,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC8M,KAAM,CACFxI,OAAQtE,EAAMM,QAAQ,EAAG,EAAG,EAAG,IAEnCyM,MAAO,CACHzI,OAAQtE,EAAMM,QAAQ,EAAG,EAAG,EAAG,QAI1B0M,GAAiB,SAAC,GAAyB,IAAxBpJ,EAAuB,EAAvBA,SAAUF,EAAa,EAAbA,QAChCR,EAAUpD,KAEhB,OACI,kBAACmH,EAAA,EAAD,CACIzD,UAAWN,EAAQ6J,MACnBnG,MAAM,YACN/B,QAAQ,YACRqC,KAAK,QACLtD,SAAUA,EACVF,QAASA,GANb,cAYKuJ,GAAoB,SAAC,GAAyB,IAAxBrJ,EAAuB,EAAvBA,SAAUF,EAAa,EAAbA,QACnCR,EAAUpD,KAEhB,OACI,kBAACmH,EAAA,EAAD,CACIzD,UAAWN,EAAQ6J,MACnBnG,MAAM,UACN/B,QAAQ,YACRqC,KAAK,QACLtD,SAAUA,EACVF,QAASA,GANb,iBAYKwJ,GAAa,SAAC,GAAyB,IAAxBtJ,EAAuB,EAAvBA,SAAUF,EAAa,EAAbA,QAC5BR,EAAUpD,KAEhB,OACI,kBAACmH,EAAA,EAAD,CACIzD,UAAWN,EAAQ4J,KACnBlG,MAAM,UACN/B,QAAQ,YACRqC,KAAK,QACLtD,SAAUA,EACVF,QAASA,GANb,gBCzCF5D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmN,MAAO,CACH7I,OAAQtE,EAAMM,QAAQ,EAAG,EAAG,EAAG,QA6BxB8M,GAzBW,SAAC,GAA4D,IAA3DC,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,QAASxG,EAA0C,EAA1CA,SAAUwF,EAAgC,EAAhCA,aAAciB,EAAkB,EAAlBA,aAC1DrK,EAAUpD,KAEhB,OACI,oCACI,kBAACyM,GAAA,EAAD,CAAa/I,UAAWN,EAAQiK,OAC5B,kBAACX,GAAA,EAAD,CACIC,QAAO,wBAAmBY,GAC1BX,QAAQ,GAFZ,4BAGuBW,EAAQ,IAE/B,kBAACV,GAAA,EAAD,CACI7H,GAAE,wBAAmBuI,GACrBzF,MAAOd,EACP8F,SAAU,SAACjJ,GAAD,OAAW2I,EAAae,EAAO1J,EAAMyD,OAAOQ,WAGzDyF,EAAQ,EACL,kBAAC,GAAD,CAAmBzJ,SAAU0J,EAAS5J,QAAS,kBAAM6J,EAAaF,MAClE,K,oBCtBdvN,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCwN,KAAM,CACFpN,SAAU,WACVqN,IAAK,MACLC,KAAM,MACNC,UAAW,wBACX3G,MAAO,IACP4G,gBAAiB5N,EAAM6N,QAAQC,WAAWxL,MAC1CyL,QAAS,EACTC,aAAc,EACdC,UAAWjO,EAAMkO,QAAQ,GACzB,SAAU,CACN5J,OAAQtE,EAAMM,QAAQ,EAAG,EAAG,EAAG,KAGvCuB,MAAO,CACHyC,OAAQtE,EAAMM,QAAQ,IAE1BwK,MAAO,CACHlE,MAAOuH,KAAI,KACX7J,OAAQtE,EAAMM,QAAQ,EAAG,EAAG,EAAG,QAwCxB8N,GApCI,SAAC,GAAkH,IAAjHC,EAAgH,EAAhHA,MAAOC,EAAyG,EAAzGA,KAAMhB,EAAmG,EAAnGA,QAASiB,EAA0F,EAA1FA,YAAaC,EAA6E,EAA7EA,iBAAkBC,EAA2D,EAA3DA,UAAWC,EAAgD,EAAhDA,iBAAkBnB,EAA8B,EAA9BA,aAAcoB,EAAgB,EAAhBA,WAC3GzL,EAAUpD,KAEhB,OACI,0BAAM0D,UAAWN,EAAQsK,KAAMoB,YAAU,EAACC,aAAa,OACnD,kBAACjK,EAAA,EAAD,CAAYpB,UAAWN,EAAQrB,MAAOgD,QAAQ,MAA9C,eACA,kBAAC,GAAD,CAAcuH,KAAK,yBACnB,kBAAC,GAAD,CAAmBxE,MAAO0G,EAAMhC,aAAckC,IAC9C,kBAAC5E,GAAA,EAAD,MACA,kBAAC,GAAD,CAAcwC,KAAK,kBAEfiC,EAAM/H,KACF,SAACQ,EAAUuG,GAAX,OACI,kBAAC,GAAD,CACI7G,IAAK6G,EACLA,MAAOA,EACPC,QAASA,EACTxG,SAAUA,EACVwF,aAAcoC,EACdnB,aAAcA,OAK9B,kBAAC,GAAD,CAAgB3J,SAAU0J,EAAS5J,QAAS+K,IAC5C,kBAAC7E,GAAA,EAAD,MAEK2E,EACG,kBAAC3J,EAAA,EAAD,CAAYpB,UAAWN,EAAQ4H,MAAOjG,QAAQ,aAAc0J,EAAYO,SACxE,GAER,kBAAC,GAAD,CAAYlL,SAAU0J,EAAS5J,QAASiL,MC5CrC,SAASI,KACpB,IAAM7L,EAAUpD,IACVkP,EAAUC,cAFgB,EAIR5J,IAAMC,UAAS,GAJP,mBAIzB0G,EAJyB,KAInBkD,EAJmB,OAMR7J,IAAMC,SAAS,IANP,mBAMzBgJ,EANyB,KAMnBa,EANmB,OAON9J,IAAMC,SAAS,CAAC,KAPV,mBAOzB+I,EAPyB,KAOlBe,EAPkB,OAQF/J,IAAMC,UAAS,GARb,mBAQzBgI,EARyB,KAQhB+B,EARgB,OASMhK,IAAMC,SAAS,MATrB,mBASzBiJ,EATyB,KASZe,EATY,OAWQjK,IAAMC,SAAS,IAXvB,mBAWzBiK,EAXyB,KAWXC,EAXW,OAYFnK,IAAMC,UAAS,GAZb,mBAYzBJ,EAZyB,KAYhByF,EAZgB,OAaItF,IAAMC,SAAS,MAbnB,mBAazBF,EAbyB,KAabqK,EAba,KAgB1BC,EAAmB,WACrBR,GAAQ,GACRS,KAoBEA,EAAY,WACdR,EAAQ,IACRC,EAAS,CAAC,KACVC,GAAW,IA2DTO,EACF,6BACI,kBAAC,GAAD,CACIvB,MAAOA,EACPC,KAAMA,EACNhB,QAASA,EACTiB,YAAaA,EACbC,iBApFa,SAAC7K,GAAD,OAAWwL,EAAQxL,EAAMyD,OAAOQ,QAqF7C6G,UAnFa,kBAAMW,EAAS,GAAD,mBAAKf,GAAL,CAAY,OAoFvCK,iBA7EkB,SAACrB,EAAOzF,GAClC,IAAMiI,EAAQ,YAAOxB,GACrBwB,EAASxC,GAASzF,EAClBwH,EAASS,IA2EDtC,aApFgB,SAACF,GACzB,IAAMwC,EAAQ,YAAOxB,GACrBwB,EAASC,OAAOzC,EAAO,GACvB+B,EAASS,IAkFDlB,WA1Ca,WACrBU,GAAW,GACXrE,MAAMC,GAAIf,QAAQE,IAAK,CACnB2F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBJ,KAAMK,KAAKC,UAAU,CAAC5B,OAAMD,YAE3BnD,MAAK,SAACC,GACH,OAAmB,MAAfA,EAAIC,OACGC,QAAQC,QAAQH,EAAII,QAGxBF,QAAQC,QAAQH,EAAII,QAAQL,MAAK,SAACpB,GACrC,OAAOuB,QAAQG,OAAO1B,SAG7BoB,MAAK,SAACpB,GACH4F,IACAV,EAAQmB,KAAR,WAAiBrG,EAAKhF,QACvB,SAACgG,GACAW,QAAQX,MAAM,UAAWA,EAAMgE,SAC/BQ,EAAexE,GACfuE,GAAW,MAEd3D,OAAM,SAACC,GACJF,QAAQX,MAAM,WAAYa,UAmBtC,OACI,yBAAKnI,UAAWN,EAAQjD,MACpB,kBAACmQ,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQjQ,SAAS,WAAWoD,UAAW8M,YAAKpN,EAAQjC,SAChD,kBAAC0D,EAAA,EAAD,CAASnB,UAAWN,EAAQxC,SAC5B,kBAACkE,EAAA,EAAD,CACIpB,UAAWN,EAAQrB,MACnBgD,QAAQ,KACRE,UAAU,KACV6B,MAAM,UACN2J,QAAM,GALV,uBAUJ,0BAAM/M,UAAWN,EAAQlB,SACrB,yBAAKwB,UAAWN,EAAQnB,eACxB,kBAACyO,EAAA,EAAD,CAAWC,SAAS,KAAKjN,UAAWN,EAAQf,WACxC,kBAACkG,EAAA,EAAD,CAAMlG,WAAS,EAAC7B,QAAS,GACrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOoQ,KAAK,IAAIC,OAAK,GACjB,kBAACvI,EAAD,CACInD,SAAUsK,EACVrK,QAASA,EACTE,WAAYA,EACZD,YAhGR,WACpBwF,GAAW,GACXK,MAAMC,GAAIf,QAAQC,MACbe,MAAK,SAACC,GACH,OAAmB,MAAfA,EAAIC,OACGC,QAAQC,QAAQH,EAAII,QAGxBF,QAAQC,QAAQH,EAAII,QAAQL,MAAK,SAACpB,GACrC,OAAOuB,QAAQG,OAAO1B,SAG7BoB,MAAK,SAACpB,GACH0F,EAAgB1F,EAAK7E,UACrB0F,GAAW,MACZ,SAACG,GACAW,QAAQX,MAAM,UAAWA,EAAMgE,SAC/BW,EAAc3E,GACdH,GAAW,MAEde,OAAM,SAACC,GACJF,QAAQX,MAAM,WAAYa,UA6Ed,kBAAC,IAAD,CAAO+E,KAAK,UACR,kBAACpG,GAAD,SAIZ,kBAACsG,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACC,GAAD,OAEJ,kBAAC,GAAD,CAAK9E,KAAMA,EAAMC,YAjIV,kBAAOD,EAAQ0D,IANRR,GAAQ,QA0I9B,kBAAC6B,EAAA,EAAD,CAAOvN,UAAWN,EAAQzC,MAAOuL,KAAMA,EAAMgF,QAAStB,GACjDE,ICrKGqB,QACW,cAA7BC,OAAOzG,SAAS0G,UAEe,UAA7BD,OAAOzG,SAAS0G,UAEhBD,OAAOzG,SAAS0G,SAASC,MACvB,2DCXNC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,KACI,kBAAC,GAAD,QAGRC,SAASC,eAAe,SDsHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1G,MAAK,SAAA2G,GACJA,EAAaC,gBAEdpG,OAAM,SAAAZ,GACLW,QAAQX,MAAMA,EAAMgE,a","file":"static/js/main.3ebb97da.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing(3),\n        right: theme.spacing(3),\n        zIndex: theme.zIndex.modal + 1,\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    modal: {\n        overflowY: 'scroll',\n    },\n    breadcrumbs: {\n        padding: theme.spacing(0, 2, 2, 2),\n    },\n    grid: {\n        flexGrow: 1\n    },\n}));\n\nexport default useStyles;","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst moment = require('moment-timezone');\n\nconst useStyles1 = makeStyles((theme) => ({\n    root: {\n        flexShrink: 0,\n        marginLeft: theme.spacing(2.5),\n    },\n}));\n\nfunction TablePaginationActions(props) {\n    const classes = useStyles1();\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onChangePage } = props;\n\n    const handleFirstPageButtonClick = (event) => {\n        onChangePage(event, 0);\n    };\n\n    const handleBackButtonClick = (event) => {\n        onChangePage(event, page - 1);\n    };\n\n    const handleNextButtonClick = (event) => {\n        onChangePage(event, page + 1);\n    };\n\n    const handleLastPageButtonClick = (event) => {\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n\n    return (\n        <div className={classes.root}>\n        <IconButton\n            onClick={handleFirstPageButtonClick}\n            disabled={page === 0}\n            aria-label=\"first page\"\n        >\n            {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n            onClick={handleNextButtonClick}\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            aria-label=\"next page\"\n        >\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n            onClick={handleLastPageButtonClick}\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            aria-label=\"last page\"\n        >\n            {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n        </div>\n    );\n}\n\nTablePaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n};\n\nconst useStyles2 = makeStyles((theme) => ({\n    table: {\n        minWidth: 500,\n    },\n    button: {\n        margin: theme.spacing(0.5, 1, 0.5, 0)\n    },\n}));\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nconst TableToolbar = () => {\n    const classes = useToolbarStyles();\n\n    return (\n        <Toolbar className={classes.root}>\n            <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                Reported Fake Accounts\n            </Typography>\n        </Toolbar>\n    );\n};\n\nexport default function CustomPaginationActionsTable({accounts, loading, fetchError, handleFetch}) {\n    const classes = useStyles2();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const rows = accounts;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, (rows.length < 1 ? 1 : rows.length) - page * rowsPerPage);\n    \n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    React.useEffect(handleFetch, []);\n\n    return (\n        <>\n            <TableToolbar />\n            <Table className={classes.table} aria-label=\"custom pagination table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>FB Username</TableCell>\n                        <TableCell align=\"right\"></TableCell>\n                        <TableCell align=\"right\">Date Reported</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        (!rows || rows.length <= 0)\n                            ? (\n                                <>\n                                    <TableRow></TableRow>\n                                    <TableRow></TableRow>\n                                    <TableRow>\n                                        <TableCell colSpan={6} align=\"center\">\n                                            { (loading) ? 'Loading...' : 'No data to show.' }\n                                        </TableCell>\n                                    </TableRow>\n                                    <TableRow></TableRow>\n                                    <TableRow></TableRow>\n                                </>\n                            ) : (\n                                (\n                                    (rowsPerPage > 0\n                                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        : rows\n                                    ).map((row) => (\n                                        <TableRow key={row.id}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                <Link\n                                                    component={RouterLink}\n                                                    color=\"inherit\"\n                                                    to={`/${row.id}`} >\n                                                    { row.username }\n                                            </Link>\n                                            </TableCell>\n                                            <TableCell style={{ width: 300 }} align=\"right\">\n                                                <Button\n                                                    className={classes.button}\n                                                    component={RouterLink}\n                                                    variant=\"contained\"\n                                                    color=\"secondary\"\n                                                    size=\"small\"\n                                                    to={`/${row.id}`} >\n                                                    View Details\n                                                </Button>\n                                                <Button\n                                                    className={classes.button}\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    size=\"small\"\n                                                    href={`https://facebook.com/${row.username}`}\n                                                    target=\"_blank\" >\n                                                    Facebook\n                                                </Button>\n                                                {/* {row.calories} */}\n                                            </TableCell>\n                                            <TableCell style={{ width: 160 }} align=\"right\">\n                                                { moment(row.created_at).tz('Asia/Singapore').format('MM/DD/YY hh:mm a') }\n                                            </TableCell>\n                                        </TableRow>\n                                    ))\n                                )\n                            )\n                    }\n\n                    {emptyRows > 0 && (\n                        <TableRow style={{ height: 53 * emptyRows }}>\n                        <TableCell colSpan={6} />\n                        </TableRow>\n                    )}\n                </TableBody>\n                <TableFooter>\n                    <TableRow>\n                        <TablePagination\n                        rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                        colSpan={3}\n                        count={rows.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        SelectProps={{\n                            inputProps: { 'aria-label': 'rows per page' },\n                            native: true,\n                        }}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                        ActionsComponent={TablePaginationActions}\n                        />\n                    </TableRow>\n                </TableFooter>  \n            </Table>\n        </>\n    );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport useStyles from '../styling.js';\n\nimport DataTable from '../components/DataTable.js';\n\nexport default function Home({accounts, loading, fetchError, handleFetch}) {\n    const classes = useStyles();\n\n    return (\n        <Grid item xs={12}>\n            <Paper className={classes.paper}>\n                <DataTable\n                    accounts={accounts}\n                    loading={loading}\n                    fetchError={fetchError}\n                    handleFetch={handleFetch} />\n            </Paper>\n        </Grid>\n    );\n}","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Divider from '@material-ui/core/Divider';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        padding: theme.spacing(2),\n        '& > *': {\n            marginBottom: theme.spacing(2)\n        },\n        '& > h5, & > h6': {\n            fontWeight: 700,\n        },\n        '& > h5': {\n            marginBottom: theme.spacing(3),\n        },\n        '& > h6': {\n            marginBottom: theme.spacing(1),\n        },\n    },\n    lastItem: {\n        marginBottom: 0,\n    },\n}));\n\nexport const DataCard = ({loading, account}) => {\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.card}>\n            { (loading || !account) ? 'Loading...' : (\n                (account.username) ? (\n                    <>\n                        <Typography variant=\"h6\">Account: {account.username}</Typography>\n                        <Chip label=\"Fake\" color=\"secondary\" size=\"small\" />\n                        <Typography variant=\"body1\">You may report this account by visiting its Facebook profile below:</Typography>\n                        <Button\n                            className={classes.lastItem}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            size=\"small\"\n                            href={`https://facebook.com/${account.username}`}\n                            target=\"_blank\" >\n                            Facebook Profile\n                        </Button>\n                    </>\n                    \n                ) : (\n                    <>\n                        <Typography variant=\"h6\">Facebook Account</Typography>\n                        <Chip label=\"Real\" color=\"primary\" size=\"small\" />\n                        <Typography variant=\"body1\">\n                            Due to privacy concerns, this account may not be viewed by the public.\n                            However, you may report the associated accounts in the list to the right/below.\n                        </Typography>\n                        <Typography className={classes.lastItem} variant=\"body1\">\n                            Additionally, this page is not listed in the home page.\n                            If you wish to share this page, you may send them the link of this page.\n                        </Typography>\n                    </>\n                )\n            ) }\n        </Paper>\n    );\n};\n\nconst ListItemLink = ({primary, to}) => {\n    const CustomLink = React.useMemo(\n        () =>\n            React.forwardRef((linkProps, ref) => (\n                <RouterLink ref={ref} to={to} {...linkProps} />\n            )),\n        [to],\n    );\n\n    return (\n        <li>\n            <ListItem button component={CustomLink}>\n                <ListItemText primary={primary} />\n                <ListItemSecondaryAction>\n                    <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        size=\"small\"\n                        href={`https://facebook.com/${primary}`}\n                        target=\"_blank\" >\n                        Facebook Profile\n                    </Button>\n                </ListItemSecondaryAction>\n            </ListItem>\n        </li>\n    );\n};\n\nexport const SimilarCard = ({loading, account}) => {\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.card}>\n            { (loading || !account) ? 'Loading...' : (\n                <>\n                    <Typography variant=\"h6\">{ (account.username) ? 'Similar' : 'Related' } Fake Accounts</Typography>\n                    <List className={classes.lastItem}>\n                        <Divider component=\"li\" />\n                        {\n                            account.similar.length < 1 ? (\n                                <>\n                                    <ListItem>\n                                        <ListItemText primary={ 'No ' + ((account.username) ? 'similar' : 'related') + ' accounts'} />\n                                    </ListItem>\n                                    <Divider component=\"li\" />\n                                </>\n                            ) : account.similar.map((data) => (\n                                <>\n                                    <ListItemLink primary={data.username} to={`/${data.id}`} />\n                                    <Divider component=\"li\" />\n                                </>\n                            ))\n                        }\n                    </List>\n                </>\n            ) }\n        </Paper>\n    );\n};\n\nexport const Error404Card = () => {\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.card}>\n            <Typography className={classes.header} variant=\"h5\" align=\"center\">404: Account not found!</Typography>\n            <Typography variant=\"body1\" align=\"center\">You may go back to the homepage by clicking 'Home' at the top left.</Typography>\n        </Paper>\n    )\n};","let BASE_URL = `https://reportfakefbph.herokuapp.com`\nif (process.env.NODE_ENV === 'dev') {\n    BASE_URL = `http://localhost:5000`;\n}\n\n\nexport default {\n    reports: {\n        list: `${BASE_URL}/reports`,\n        add: `${BASE_URL}/reports`\n    },\n    report: (id) => `${BASE_URL}/reports/${id}`,\n};","import React from 'react';\nimport { Link as RouterLink, useParams, useLocation } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport useStyles from '../styling.js';\n\nimport { DataCard, SimilarCard, Error404Card } from '../components/Cards.js';\n\nimport api from '../serverApi.js';\n\nexport default function Account() {\n    const classes = useStyles();\n    const { uuid } = useParams();\n    const location = useLocation();\n\n    const [loading, setLoading] = React.useState(false);\n    const [account, setAccount] = React.useState(undefined);\n    const [error, setError] = React.useState(undefined);\n\n    const handleLoadData = () => {\n        setLoading(true);\n        fetch(api.report(uuid))\n            .then((res) => {\n                if (res.status === 200) {\n                    return Promise.resolve(res.json());\n                }\n\n                return Promise.resolve(res.json()).then((data) => {\n                    return Promise.reject(data);\n                });\n            })\n            .then((data) => {\n                setAccount(data);\n                setLoading(false);\n            }, (error) => {\n                console.error(\"Error: \", error);\n                setError(error);\n                setLoading(false);\n            })\n            .catch((catchError) => {\n                console.error(\"Caught: \", catchError)\n            });\n    };\n\n    React.useEffect(handleLoadData, [location]);\n\n    return (\n        <Grid item xs={12}>\n            <Breadcrumbs className={classes.breadcrumbs}>\n                <Link color=\"inherit\" component={RouterLink} to=\"/\">\n                    Home\n                </Link>\n                <Link color=\"textPrimary\" component={RouterLink} to={`/${uuid}`}>\n                    {\n                        (loading) ? 'Loading' : (\n                            (error) ? 'Error' : (\n                                (!account) ? 'Account' : (\n                                    (account.username) ? account.username : 'Facebook Account'\n                                )\n                            )\n                        )\n                    }\n                </Link>\n            </Breadcrumbs>\n            <Grid className={classes.grid} container spacing={4}>\n                {\n                    ((loading && !account) || account) ? (\n                        <>\n                            <Grid item xs={12} sm={6}>\n                                <DataCard loading={loading} account={account}></DataCard>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <SimilarCard loading={loading} account={account}></SimilarCard>\n                            </Grid>\n                        </>\n                    ) : (\n                        <Grid item xs={12}>\n                            <Error404Card />\n                        </Grid>\n                    )\n                }\n            </Grid>\n        </Grid>\n    );\n}","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing(3),\n        right: theme.spacing(3),\n        zIndex: theme.zIndex.modal + 1,\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst FabAddReport = ({open, handleClick}) => {\n    const classes = useStyles();\n\n    return (\n        <Fab\n            className={classes.fab}\n            variant={open ? 'round' : 'extended'}\n            color={open ? 'primary' : 'secondary'}\n            onClick={handleClick} >\n            { open ? (<CloseIcon />) : (\n                <>\n                    <AddIcon className={classes.extendedIcon} />\n                    Add Report\n                </>\n            ) }\n        </Fab>\n    );\n};\n\nexport default FabAddReport;","\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport default () => (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Made by '}\n        <Link color=\"inherit\" href=\"http://github.com/coarse\">\n            Michael Pio Mayol\n        </Link>\n        {' '}\n        <>&mdash;</>\n        {' Source Code: '}\n        <Link color=\"inherit\" href=\"https://github.com/coarse/reportfakefb-api\">\n            Server\n        </Link>\n        {' / '}\n        <Link color=\"inherit\" href=\"https://github.com/coarse/reportfakefb-app\">\n            Web App\n        </Link>\n    </Typography>\n);","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(2, 2, 0, 2),\n    },\n}));\n\nconst SectionTitle = ({ className, text }) => {\n    const classes = useStyles();\n    \n    return (\n        <Typography\n            variant=\"subtitle2\"\n            className={classes.root} >\n            { text }\n        </Typography>\n    );\n};\n\nexport default SectionTitle;","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1, 0, 2, 2)\n    },\n}));\n\nconst RealUsernameField = ({value, handleChange}) => {\n    const classes = useStyles();\n\n    return (\n        <FormControl className={classes.root}>\n            <InputLabel htmlFor=\"real-username\" shrink={true}>Link/Username to Real FB Account</InputLabel>\n            <Input id=\"real-username\" value={value} onChange={handleChange} />\n            <FormHelperText>\n                This information will not be shared to the public.\n            </FormHelperText>\n        </FormControl>\n    );\n};\n\nexport default RealUsernameField;","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    send: {\n        margin: theme.spacing(0, 0, 2, 2),\n    },\n    entry: {\n        margin: theme.spacing(2, 0, 2, 2),\n    }\n}));\n\nexport const AddEntryButton = ({disabled, onClick}) => {\n    const classes = useStyles();\n    \n    return (\n        <Button\n            className={classes.entry}\n            color=\"secondary\"\n            variant=\"contained\"\n            size=\"small\"\n            disabled={disabled}\n            onClick={onClick} >\n            Add Entry\n        </Button>\n    );\n};\n\nexport const DeleteEntryButton = ({disabled, onClick}) => {\n    const classes = useStyles();\n    \n    return (\n        <Button\n            className={classes.entry}\n            color=\"primary\"\n            variant=\"contained\"\n            size=\"small\"\n            disabled={disabled}\n            onClick={onClick} >\n            Delete Entry\n        </Button>\n    );\n};\n\nexport const SendButton = ({disabled, onClick}) => {\n    const classes = useStyles();\n    \n    return (\n        <Button\n            className={classes.send}\n            color=\"primary\"\n            variant=\"contained\"\n            size=\"small\"\n            disabled={disabled}\n            onClick={onClick} >\n            Send Report\n        </Button>\n    );\n};","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\n\nimport { DeleteEntryButton } from './Buttons.js';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    field: {\n        margin: theme.spacing(1, 0, 1, 2),\n    },\n}));\n\nconst FakeUsernameField = ({index, sending, username, handleChange, handleDelete}) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <FormControl className={classes.field}>\n                <InputLabel\n                    htmlFor={`fake-username-${index}`}\n                    shrink={true} >\n                    Link/Username #{`${index + 1}`}\n                </InputLabel>\n                <Input\n                    id={`fake-username-${index}`}\n                    value={username}\n                    onChange={(event) => handleChange(index, event.target.value)} />\n            </FormControl>\n            {\n                (index > 0) ? (\n                    <DeleteEntryButton disabled={sending} onClick={() => handleDelete(index)} />\n                ) : ''\n            }\n        </>\n    );\n};\n\nexport default FakeUsernameField;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nimport SectionTitle from './SectionTitle.js';\nimport RealUsernameField from './RealUsernameField.js';\nimport FakeUsernameField from './FakeUsernameField.js';\nimport { AddEntryButton, SendButton } from './Buttons.js';\n\nimport red from '@material-ui/core/colors/red';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        outline: 0,\n        borderRadius: 4,\n        boxShadow: theme.shadows[5],\n        '& > hr': {\n            margin: theme.spacing(0, 2, 2, 2)\n        },\n    },\n    title: {\n        margin: theme.spacing(2),\n    },\n    error: {\n        color: red[500],\n        margin: theme.spacing(0, 2, 2, 2)\n    },\n}));\n\nconst ReportForm = ({fakes, real, sending, reportError, handleChangeReal, handleAdd, handleChangeFake, handleDelete, handleSend}) => {\n    const classes = useStyles();\n\n    return (\n        <form className={classes.form} noValidate autoComplete=\"off\">\n            <Typography className={classes.title} variant=\"h6\">Report Form</Typography>\n            <SectionTitle text=\"Real Account Details\" />\n            <RealUsernameField value={real} handleChange={handleChangeReal} />\n            <Divider />\n            <SectionTitle text=\"Fake Accounts\" />\n            {\n                fakes.map(\n                    (username, index) => (\n                        <FakeUsernameField\n                            key={index}\n                            index={index}\n                            sending={sending}\n                            username={username}\n                            handleChange={handleChangeFake}\n                            handleDelete={handleDelete}\n                        />\n                    )\n                )\n            }\n            <AddEntryButton disabled={sending} onClick={handleAdd} />\n            <Divider />\n            {\n                (reportError) ? (\n                    <Typography className={classes.error} variant=\"subtitle2\">{ reportError.message }</Typography>\n                ) : ''\n            }\n            <SendButton disabled={sending} onClick={handleSend} />\n        </form>\n    );\n};\n\nexport default ReportForm;","import React from 'react';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Modal from '@material-ui/core/Modal';\nimport useStyles from './styling.js';\n\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport Home from './routes/Home.js'\nimport Account from './routes/Account.js'\n\nimport Fab from './components/FabAddReport.js';\nimport Copyright from './components/Copyright.js';\n\nimport ReportForm from './components/ReportForm/index.js';\n\nimport api from './serverApi.js';\n\nexport default function Dashboard() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [open, setOpen] = React.useState(false);\n\n    const [real, setReal] = React.useState('');\n    const [fakes, setFakes] = React.useState(['']);\n    const [sending, setSending] = React.useState(false);\n    const [reportError, setReportError] = React.useState(null);\n\n    const [fakeAccounts, setFakeAccounts] = React.useState([]);\n    const [loading, setLoading] = React.useState(false);\n    const [fetchError, setFetchError] = React.useState(null);\n\n    const handleOpenModal = () => setOpen(true);\n    const handleCloseModal = () => {\n        setOpen(false);\n        clearData();\n    }\n\n    const handleFabClick = () => (open) ? handleCloseModal() : handleOpenModal();\n\n    const handleChangeReal = (event) => setReal(event.target.value);\n    \n    const handleAddFakeRow = () => setFakes([...fakes, '']);\n    const handleDeleteFakeRow = (index) => {\n        const newFakes = [...fakes];\n        newFakes.splice(index, 1);\n        setFakes(newFakes);\n    };\n\n    const handleChangeFakeValue = (index, value) => {\n        const newFakes = [...fakes];\n        newFakes[index] = value;\n        setFakes(newFakes);\n    };\n\n    const clearData = () => {\n        setReal('');\n        setFakes(['']);\n        setSending(false);\n    };\n\n    const handleFetchData = () => {\n        setLoading(true);\n        fetch(api.reports.list)\n            .then((res) => {\n                if (res.status === 200) {\n                    return Promise.resolve(res.json());\n                }\n\n                return Promise.resolve(res.json()).then((data) => {\n                    return Promise.reject(data);\n                });\n            })\n            .then((data) => {\n                setFakeAccounts(data.accounts);\n                setLoading(false);\n            }, (error) => {\n                console.error(\"error: \", error.message);\n                setFetchError(error);\n                setLoading(false);\n            })\n            .catch((catchError) => {\n                console.error(\"Caught: \", catchError)\n            });\n    };\n\n    const handleSendReport = () => {\n        setSending(true);\n        fetch(api.reports.add, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({real, fakes}),\n        })\n            .then((res) => {\n                if (res.status === 200) {\n                    return Promise.resolve(res.json());\n                }\n\n                return Promise.resolve(res.json()).then((data) => {\n                    return Promise.reject(data);\n                });\n            })\n            .then((data) => {\n                handleCloseModal();\n                history.push(`/${data.id}`);\n            }, (error) => {\n                console.error(\"error: \", error.message);\n                setReportError(error);\n                setSending(false);\n            })\n            .catch((catchError) => {\n                console.error(\"Caught: \", catchError)\n            });\n    };\n\n    const body = (\n        <div>\n            <ReportForm\n                fakes={fakes}\n                real={real}\n                sending={sending}\n                reportError={reportError}\n                handleChangeReal={handleChangeReal}\n                handleAdd={handleAddFakeRow}\n                handleChangeFake={handleChangeFakeValue}\n                handleDelete={handleDeleteFakeRow}\n                handleSend={handleSendReport} />\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"absolute\" className={clsx(classes.appBar)}>\n                <Toolbar className={classes.toolbar}>\n                <Typography\n                    className={classes.title}\n                    variant=\"h6\"\n                    component=\"h1\"\n                    color=\"inherit\"\n                    noWrap >\n                    Report Fake FB PH   \n                </Typography>\n                </Toolbar>\n            </AppBar>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid container spacing={3}>\n                        <Switch>\n                            <Route path=\"/\" exact>\n                                <Home\n                                    accounts={fakeAccounts}\n                                    loading={loading}\n                                    fetchError={fetchError}\n                                    handleFetch={handleFetchData} />\n                            </Route>\n                            <Route path=\"/:uuid\">\n                                <Account />\n                            </Route>\n                        </Switch>\n                    </Grid>\n                    <Box pt={4}>\n                        <Copyright />\n                    </Box>\n                    <Fab open={open} handleClick={handleFabClick} />\n                </Container>\n            </main>\n            <Modal className={classes.modal} open={open} onClose={handleCloseModal}>\n                {body}\n            </Modal>\n        </div>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}